{"version":3,"sources":["webpack://aegis-app/./src/adapters/address-adapter.js","webpack://aegis-app/./src/adapters/event-adapter.js","webpack://aegis-app/./src/adapters/index.js","webpack://aegis-app/./src/adapters/inventory-adapter.js","webpack://aegis-app/./src/adapters/order-adapter.js","webpack://aegis-app/./src/adapters/payment-adapter.js","webpack://aegis-app/./src/adapters/service-locator.js","webpack://aegis-app/./src/adapters/shipping-adapter.js","webpack://aegis-app/./src/adapters/websocket-adapter.js","webpack://aegis-app/./src/services/event-service.js"],"names":["validateAddress","service","options","order","model","args","callback","decrypt","shippingAddress","update","console","error","func","name","subscriptions","Map","filterMatches","message","filter","regex","RegExp","result","test","debug","substring","concat","Subscription","id","topic","filters","once","unsubscribe","get","getId","getModel","getSubscriptions","entries","every","subscription","listen","Event","arg","has","set","listening","forEach","notify","JSON","parse","pickOrder","Promise","resolve","reject","orderNo","event","log","pickupAddress","eventData","warehouse_addr","newOrder","then","stringify","eventType","eventTime","Date","toISOString","eventSource","replyChannel","commandName","commandArgs","lineItems","orderItems","externalId","reason","Error","axios","require","OrderAdapter","customerId","creditCardNumber","billingAddress","firstName","lastName","email","orderInfo","itemId","price","qty","indexOf","push","orderId","RestOrderAdapter","url","post","response","data","modelId","e","patch","orderStatus","proofOfDelivery","pod","cancelReason","GraphQlOrderAdapter","authorizePayment","paymentAuthorization","paymentStatus","completePayment","confirmationCode","refundPayment","process","env","DEBUG","ServiceLocator","serviceUrl","primary","backup","maxRetries","retryInterval","dns","Dns","isPrimary","isBackup","activateBackup","retries","answer","query","questions","type","setTimeout","ask","on","fromClient","find","question","runningAsService","URL","answers","port","target","hostname","info","respond","buildUrl","fromServer","protocol","msg","off","locator","serviceLocatorInit","serviceLocatorAsk","serviceLocatorAnswer","ORDER_SERVICE","ORDER_TOPIC","handleError","file","__filename","shipOrder","shipOrderCallback","callShipOrder","shipTo","shipFrom","signature","signatureRequired","requester","respondOn","payload","getPayload","updated","trackShipment","trackShipmentCallback","callTrackShipment","shipmentId","trackingStatus","verifyDelivery","verifyDeliveryCallback","callVerifyDelivery","trackingId","socket","useBinary","binaryType","primitives","encode","object","Buffer","from","string","number","symbol","undefined","decode","toString","websocketConnect","WebSocket","websocketSend","readyState","OPEN","bufferedAmount","send","binary","websocketClose","code","close","websocketPing","ping","websocketOnMessage","websocketOnClose","onclose","websocketOnOpen","onopen","websocketOnPong","websocketStatus","websocketTerminate","terminate","brokers","KAFKA_BROKERS","topics","KAFKA_TOPICS","groupId","KAFKA_GROUP_ID","pid","kafka","Kafka","clientId","split","consumer","producer","connect","subscribe","fromBeginning","run","eachMessage","value","messages","disconnect"],"mappings":"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","file":"src_adapters_index_js.js","sourcesContent":["\"use strict\";\n\n/**\n * @typedef {import('../domain/order').Order} Order\n * @typedef {string} address\n * @callback adapterFactory\n * @param {service} service\n * @returns {function({model:Order})} - verified/corrected address\n */\n\n/**\n *\n * @type {adapterFactory}\n * @param {import(\"../services/address-service\").Address} service\n */\nexport function validateAddress(service) {\n  return async function (options) {\n    const {\n      model: order,\n      args: [callback],\n    } = options;\n\n    try {\n      const shippingAddress = await service.validateAddress(\n        order.decrypt().shippingAddress\n      );\n      const update = await callback(options, { shippingAddress });\n      return update;\n    } catch (error) {\n      console.error({ func: validateAddress.name, error, options });\n    }\n  };\n}\n","\"use strict\";\n\n/**\n * @typedef {import('../domain').Model} Model\n * @typedef {string} serviceName\n *\n * @typedef {Object} EventMessage\n * @property {serviceName} eventSource\n * @property {serviceName|\"broadcast\"} eventTarget\n * @property {\"command\"|\"commandResponse\"|\"notification\"|\"import\"} eventType\n * @property {string} eventName\n * @property {string} eventTime\n * @property {string} eventUuid\n * @property {NotificationEvent|ImportEvent|CommandEvent} eventData\n *\n * @typedef {object} ImportEvent\n * @property {\"service\"|\"model\"|\"adapter\"} type\n * @property {string} url\n * @property {string} path\n * @property {string} importRemote\n *\n * @typedef {object} NotificationEvent\n * @property {string|} message\n * @property {\"utf8\"|Uint32Array} encoding\n *\n * @typedef {Object} CommandEvent\n * @property {string} commandName\n * @property {string} commandResp\n * @property {*} commandArgs\n */\n\n/**\n * @typedef {{\n *  filter:function(message):Promise<void>,\n *  unsubscribe:function()\n * }} Subscription\n * @typedef {string|RegExp} topic\n * @callback eventHandler\n * @param {string} eventData\n * @typedef {eventHandler} notifyType\n * @typedef {{\n * listen:function(topic, x),\n * notify:notifyType\n * }} EventService\n * @callback adapterFactory\n * @param {EventService} service\n * @returns {function(topic, eventHandler)}\n */\nimport { Event } from \"../services/event-service\";\n\n/**\n * @type {Map<any,Map<string,*>>}\n */\nconst subscriptions = new Map();\n\n/**\n * Test the filter.\n * @param {string} message\n * @returns {function(string|RegExp):boolean} did the filter match?\n */\nfunction filterMatches(message) {\n  return function (filter) {\n    const regex = new RegExp(filter);\n    const result = regex.test(message);\n    if (result)\n      console.debug({\n        func: filterMatches.name,\n        filter,\n        result,\n        message: message.substring(0, 100).concat(\"...\"),\n      });\n    return result;\n  };\n}\n\n/**\n * @typedef {string} message\n * @typedef {string|RegExp} topic\n * @param {{\n *  id:string,\n *  callback:function(message,Subscription),\n *  topic:topic,\n *  filter:string|RegExp,\n *  once:boolean,\n *  model:import(\"../domain\").Model\n * }} options\n */\nconst Subscription = function ({ id, callback, topic, filters, once, model }) {\n  return {\n    /**\n     * unsubscribe from topic\n     */\n    unsubscribe() {\n      subscriptions.get(topic).delete(id);\n    },\n\n    getId() {\n      return id;\n    },\n\n    getModel() {\n      return model;\n    },\n\n    getSubscriptions() {\n      return [...subscriptions.entries()];\n    },\n\n    /**\n     * Filter message and invoke callback\n     * @param {string} message\n     */\n    async filter(message) {\n      if (filters) {\n        // Every filter must match.\n        if (filters.every(filterMatches(message))) {\n          if (once) {\n            // Only looking for 1 msg, got it.\n            this.unsubscribe();\n          }\n          await callback({ message, subscription: this });\n          return;\n        }\n        // no match\n        return;\n      }\n      // no filters defined, just invoke the callback.\n      await callback({ message, subscription: this });\n    },\n  };\n};\n\n/**\n * Listen for external events with default event service if none specified.\n * @type {adapterFactory}\n * @param {import('../services/event-service').Event} [service] - has default service\n */\nexport function listen(service = Event) {\n  return async function (options) {\n    const {\n      model,\n      args: [arg],\n    } = options;\n\n    const subscription = Subscription({ model, ...arg });\n\n    if (subscriptions.has(arg.topic)) {\n      subscriptions.get(arg.topic).set(arg.id, subscription);\n      return subscription;\n    }\n\n    subscriptions.set(arg.topic, new Map().set(arg.id, subscription));\n\n    if (!service.listening) {\n      service.listen(/Channel/, async function ({ topic, message }) {\n        if (subscriptions.has(topic)) {\n          subscriptions.get(topic).forEach(async subscription => {\n            await subscription.filter(message);\n          });\n        }\n      });\n    }\n    return subscription;\n  };\n}\n\n/**\n * @type {adapterFactory}\n * @returns {function(topic, eventData)}\n */\nexport function notify(service = Event) {\n  return async function ({ model, args: [topic, message] }) {\n    console.debug(\"sending...\", { topic, message: JSON.parse(message) });\n    await service.notify(topic, message);\n    return model;\n  };\n}\n","'use strict'\n\nexport * from './service-locator'\nexport * from './websocket-adapter'\nexport * from './address-adapter'\nexport * from './event-adapter'\nexport * from './inventory-adapter'\nexport * from './order-adapter'\nexport * from './payment-adapter'\nexport * from './shipping-adapter'\n\n/**\n * @typedef {import('../domain').Model} Model\n * @typedef {function(function(eventCallback):Promise<Model>)} adapterFunction\n */\n","'use strict'\n\n/**\n * @typedef {string|RegExp} topic\n * @callback eventCallback\n * @param {string} message\n * @param {{\n *  getModel:function():object,\n *  unsubscribe:function()\n * }} subscription\n * @typedef {eventCallback} shipOrderType\n * @param topic,\n * @param eventCallback\n * @typedef {{\n *  shipOrder:shipOrderType,\n *  trackShipment:function(),\n *  verifyDelivery:function()\n * }} InventoryAdapter\n * @typedef {import('../domain/order').Order} Order\n * @typedef {InventoryAdapter} service \n * @typedef {{\n *  listen:function(topic,RegExp,eventCallback)\n *  notify:function(topic,eventCallback)\n * }} event\n * @callback adapterFactory\n * @param {service} service\n * @param {event} event\n * @returns {function({\n * model:Order,\n * resolve:function()\n * ,args:[\n * eventCallback, \n * options:{}]\n * })}\n   \n }]})} \n *\n */\n\n/**\n * @type {adapterFactory}\n */\nexport function pickOrder (service) {\n  return function (options) {\n    const {\n      model: order,\n      args: [callback]\n    } = options\n\n    return new Promise(function (resolve, reject) {\n      // start listening first then send the event\n      return order\n        .listen({\n          once: true,\n          model: order,\n          id: order.orderNo,\n          topic: 'orderChannel',\n          filters: [order.orderNo, 'orderPicked', 'warehouse_addr'],\n          callback: async ({ message }) => {\n            try {\n              const event = JSON.parse(message)\n              console.log('recieved event: ', event)\n              const pickupAddress = event.eventData.warehouse_addr\n              const newOrder = await callback(options, { pickupAddress })\n              resolve(newOrder) // hold promise until we get an answer\n            } catch (error) {\n              reject(error)\n            }\n          }\n        })\n        .then(() => {\n          return order.notify(\n            'inventoryChannel',\n            JSON.stringify({\n              eventType: 'Command',\n              eventTime: new Date().toISOString(),\n              eventSource: 'orderService',\n              eventData: {\n                replyChannel: 'orderChannel',\n                commandName: 'pickOrder',\n                commandArgs: {\n                  lineItems: order.orderItems,\n                  externalId: order.orderNo\n                }\n              }\n            })\n          )\n        })\n        .catch(reason => {\n          throw new Error(reason)\n        })\n    })\n  }\n}\n","\"use strict\";\n\nconst axios = require(\"axios\");\n\nexport class OrderAdapter {\n  constructor() {}\n\n  addOrder({\n    customerId,\n    orderItems = [],\n    creditCardNumber,\n    shippingAddress,\n    billingAddress,\n    firstName,\n    lastName,\n    email,\n  } = {}) {\n    this.orderInfo = {\n      customerId,\n      orderItems,\n      creditCardNumber,\n      shippingAddress,\n      billingAddress,\n      firstName,\n      lastName,\n      email,\n    };\n    return this;\n  }\n\n  addOrderItem(itemId, price, qty = 1) {\n    if (![typeof price, typeof qty].indexOf(\"number\") === 0) {\n      throw new Error(\"qty and price must be numbers\");\n    }\n    if (!itemId || typeof itemId !== \"string\") {\n      throw new Error(\"itemId must be a non-null string\");\n    }\n    this.orderInfo.orderItems.push({ itemId, price, qty });\n    return this;\n  }\n\n  async createOrder() {\n    throw new Error(\"unimplemented abstract method\");\n  }\n\n  async submitOrder(orderId = this.orderId) {\n    throw new Error(\"unimplemented abstract method\");\n  }\n\n  async getOrder(orderId = this.orderId) {\n    throw new Error(\"unimplememnted abstract method\");\n  }\n\n  completeOrder() {\n    throw new Error(\"unimplemented abstract method\");\n  }\n\n  cancelOrder() {\n    throw new Error(\"unimplemented abstract method\");\n  }\n}\n\nexport class RestOrderAdapter extends OrderAdapter {\n  constructor(url) {\n    super();\n    this.url = url;\n  }\n\n  /**\n   * @override\n   */\n  async createOrder() {\n    if (!this.orderInfo) {\n      throw new Error(\"there is no order data\");\n    }\n    return axios\n      .post(this.url, this.orderInfo)\n      .then(\n        response => {\n          this.orderId = response.data.modelId;\n          return this;\n        },\n        error => {\n          console.error(error.response.data);\n        }\n      )\n      .catch(e => console.log(e));\n  }\n\n  /**\n   * @override\n   * @param {*} orderId\n   */\n  async submitOrder(orderId = this.orderId) {\n    if (!this.orderInfo) {\n      throw new Error(\"there is no order data\");\n    }\n    return axios.patch(this.url + orderId, { orderStatus: \"APPROVED\" }).then(\n      () => this,\n      error => {\n        console.error(error.response.data);\n        throw new Error(error);\n      }\n    );\n  }\n\n  async getOrder(orderId = this.orderId) {\n    return axios.get(this.url + orderId).then(\n      response => {\n        console.log(response.data);\n        this.order = response.data;\n        return this.order;\n      },\n      error => {\n        console.error(error.response.data);\n        throw new Error(error);\n      }\n    );\n  }\n\n  completeOrder() {\n    return axios\n      .patch(this.url + orderId, {\n        orderStatus: \"COMPLETE\",\n        proofOfDelivery: pod,\n      })\n      .then(\n        response => {\n          this.orderId = response.data.modelId;\n          return this;\n        },\n        error => {\n          console.error(error.response.data);\n          throw new Error(error);\n        }\n      );\n  }\n\n  cancelOrder() {\n    return axios\n      .patch(this.url + orderId, {\n        orderStatus: \"CANCELED\",\n        cancelReason: reason,\n      })\n      .then(\n        response => {\n          this.orderId = response.data.modelId;\n          return this;\n        },\n        error => {\n          console.error(error.response.data);\n          throw new Error(error);\n        }\n      );\n  }\n}\n\nexport class GraphQlOrderAdapter extends OrderAdapter {\n  /**\n   * @override\n   */\n  createOrder() {}\n  submitOrder() {}\n  fillOrder() {}\n  shipOrder() {}\n  trackShipment() {}\n  verifyDelivery() {}\n  completeOrder() {}\n  cancelOrder() {}\n}\n","'use strict'\n\n/**\n * @typedef {import('../domain/order').Order} Order\n * @callback adapterFactory\n * @param {service} service\n * @returns {function({model:Order,parms:any[]})}\n */\n\n/**\n * @type {adapterFactory}\n * @param {import(\"../services/payment-service\").PaymentService} service\n */\nexport function authorizePayment (service) {\n  return async function (options) {\n    const {\n      model: order,\n      args: [callback]\n    } = options\n\n    const paymentAuthorization = await service.authorizePayment(\n      order.orderNo,\n      12.0,\n      'src',\n      'ibm',\n      false\n    )\n    const paymentStatus = 'APPROVED'\n    return callback(options, { paymentStatus })\n  }\n}\n\n/**\n * @type {adapterFactory}\n */\nexport function completePayment (service) {\n  return async function (options) {\n    const {\n      model: order,\n      args: [callback]\n    } = options\n    const confirmationCode = await service.completePayment(order)\n    const newOrder = await callback(options, { confirmationCode })\n    return newOrder\n  }\n}\n/**\n * @type {adapterFactory}\n */\nexport function refundPayment (service) {\n  return async function (options) {\n    const {\n      model: order,\n      args: [callback]\n    } = options\n    await service.refundPayment(order)\n    const newOrder = await callback(options)\n    return newOrder\n  }\n}\n","'use strict'\n\nimport Dns from 'multicast-dns'\n\nconst debug = /true/i.test(process.env.DEBUG)\n\nexport class ServiceLocator {\n  constructor ({\n    name,\n    serviceUrl,\n    primary = false,\n    backup = false,\n    maxRetries = 20,\n    retryInterval = 8000\n  } = {}) {\n    this.url = serviceUrl\n    this.name = name\n    this.dns = Dns()\n    this.isPrimary = primary\n    this.isBackup = backup\n    this.maxRetries = maxRetries\n    this.retryInterval = retryInterval\n  }\n\n  runningAsService () {\n    return this.isPrimary || (this.isBackup && this.activateBackup)\n  }\n\n  /**\n   * Query DNS for the webswitch service.\n   * Recursively retry by incrementing a\n   * counter we pass to ourselves on the\n   * stack. Once the URL is populated, exit.\n   *\n   * @param {number} retries number of query attempts\n   * @returns\n   */\n  ask (retries = 0) {\n    // have we found the url?\n    if (this.url) {\n      console.log('url found')\n      return\n    }\n\n    // if designated as backup, takeover for primary after maxRetries\n    if (retries > this.maxRetries && this.isBackup) {\n      this.activateBackup = true\n      this.answer()\n      return\n    }\n    debug && console.debug('looking for srv %s retries: %d', this.name, retries)\n    // then query the service name\n    this.dns.query({\n      questions: [\n        {\n          name: this.name,\n          type: 'SRV'\n        }\n      ]\n    })\n\n    // keep asking\n    setTimeout(() => this.ask(++retries), this.retryInterval)\n  }\n\n  answer () {\n    this.dns.on('query', query => {\n      debug && console.debug('got a query packet:', query)\n\n      const fromClient = query.questions.find(\n        question => question.name === this.name\n      )\n\n      if (fromClient && this.runningAsService()) {\n        const url = new URL(this.url)\n        const answer = {\n          answers: [\n            {\n              name: this.name,\n              type: 'SRV',\n              data: {\n                port: url.port,\n                target: url.hostname\n              }\n            }\n          ]\n        }\n        console.info('advertising this location', url)\n        this.dns.respond(answer)\n      }\n    })\n  }\n\n  listen () {\n    console.log('resolving service url')\n    return new Promise(resolve => {\n      const buildUrl = response => {\n        debug && console.debug({ answers: response.answers })\n\n        const fromServer = response.answers.find(\n          answer => answer.name === this.name && answer.type === 'SRV'\n        )\n\n        if (fromServer) {\n          const { target, port } = fromServer.data\n          const protocol = port === 443 ? 'wss' : 'ws'\n          this.url = `${protocol}://${target}:${port}`\n\n          console.info({\n            msg: 'found dns service record for',\n            service: this.name,\n            url: this.url\n          })\n\n          this.dns.off('response', buildUrl)\n          resolve(this.url)\n        }\n      }\n      console.log('looking for service', this.name)\n      this.dns.on('response', buildUrl)\n      this.ask()\n    })\n  }\n}\n\nlet locator\nexport function serviceLocatorInit () {\n  return async function ({ args: [options] }) {\n    console.debug('serviceLocatorInit called')\n    locator = new ServiceLocator(options)\n  }\n}\n\nexport function serviceLocatorAsk () {\n  return async function () {\n    return locator.listen()\n  }\n}\n\nexport function serviceLocatorAnswer () {\n  return async function () {\n    return locator.answer()\n  }\n}\n","\"use strict\";\n\n/**\n * @callback portCallback\n * @param {{options:{}}}\n * @param {{payload:{[key]:string}}}\n */\n\n/**\n * @typedef {string} message\n * @callback eventCallback\n * @param {string} message\n * @param {{\n *  unsubscribe:function(),\n *  filter:function(message):boolean\n * }} subscription\n */\n\n/**\n * @typedef {import('../domain/order').Order} Order\n */\n\n/**\n * @typedef {import(\"../services/shipping-service\").shippingService} shippingService\n */\n\n/**\n * @typedef {{\n *  listen:function(topic,RegExp,portCallback)\n *  notify:function(topic,eventCallback)\n * }} event\n */\n\n/**\n * @callback adapterFactory\n * @param {service} service\n * @returns {function({model:Order,args:[portCallback]}):Order}\n */\n\nconst ORDER_SERVICE = \"orderService\";\nconst ORDER_TOPIC = \"orderChannel\";\n\nconst handleError = (error, reject = null, func = null) => {\n  console.error({ file: __filename, func, error });\n  if (reject) reject(error);\n};\n\n/**\n * Call `shipOrder` to request shipment of the order items.\n * @param {import('../services/shipping-service').shippingService} service\n * @type {adapterFactory}\n * @returns {function(options):Promise<Order>}\n * Return a promise that is resolved once we receive\n * a response message from the shipping service. Start\n * listening for the response first and then send the\n * request message.\n *\n */\nexport function shipOrder(service) {\n  return async function (options) {\n    const {\n      model: order,\n      args: [callback],\n    } = options;\n\n    /**\n     * Called by the event listener when the shipOrder\n     * response message arrives. Resolve the promise\n     * the caller has been waiting on since we sent\n     * the request message.\n     * @param {function(Order)} resolve\n     * @param {function(Error)} reject\n     * @returns {function(message):Promise<Order>}\n     */\n    function shipOrderCallback(resolve, reject) {\n      return async function ({ message }) {\n        try {\n          const event = JSON.parse(message);\n          console.debug(\"received event... \", event);\n          const payload = service.getPayload(shipOrder.name, event);\n          const updated = await callback(options, payload);\n          resolve(updated);\n        } catch (error) {\n          handleError(error, reject, shipOrderCallback.name);\n        }\n      };\n    }\n\n    /**\n     * Send the shipOrder event to the shipping service.\n     */\n    function callShipOrder() {\n      return order.notify(\n        service.topic,\n        JSON.stringify(\n          service.shipOrder({\n            shipTo: order.decrypt().shippingAddress,\n            shipFrom: order.pickupAddress,\n            lineItems: order.orderItems,\n            signature: order.signatureRequired,\n            externalId: order.orderNo,\n            requester: ORDER_SERVICE,\n            respondOn: ORDER_TOPIC,\n          })\n        )\n      );\n    }\n\n    return new Promise(function (resolve, reject) {\n      return order\n        .listen({\n          once: true,\n          model: order,\n          id: order.orderNo,\n          topic: ORDER_TOPIC,\n          filters: [order.orderNo, \"orderShipped\", \"shipmentId\"],\n          callback: shipOrderCallback(resolve, reject),\n        })\n        .then(callShipOrder)\n        .catch(handleError);\n    });\n  };\n}\n\n/**\n * @param {import('../services/shipping-service').shippingService} service\n * @type {adapterFactory}\n */\nexport function trackShipment(service) {\n  return async function (options) {\n    const {\n      model: order,\n      args: [callback],\n    } = options;\n\n    /**\n     *\n     * @param {function(Order)} resolve resolve the promise\n     * @param {function(Error)} reject reject promise\n     */\n    function trackShipmentCallback(resolve, reject) {\n      return async function ({ message, subscription }) {\n        try {\n          const event = JSON.parse(message);\n          console.debug(\"received event...\", event);\n          const payload = service.getPayload(trackShipment.name, event);\n          const updated = await callback(options, payload);\n          if (updated.trackingStatus === \"orderDelivered\") {\n            subscription.unsubscribe();\n            resolve(updated);\n          }\n        } catch (error) {\n          handleError(error, reject, trackShipment.name);\n        }\n      };\n    }\n\n    function callTrackShipment() {\n      return order.notify(\n        service.topic,\n        JSON.stringify(\n          service.trackShipment({\n            shipmentId: order.shipmentId,\n            externalId: order.orderNo,\n            requester: ORDER_SERVICE,\n            respondOn: ORDER_TOPIC,\n          })\n        )\n      );\n    }\n\n    return new Promise(async function (resolve, reject) {\n      return order\n        .listen({\n          once: false,\n          model: order,\n          id: order.orderNo,\n          topic: ORDER_TOPIC,\n          filters: [order.orderNo, \"trackingId\", \"trackingStatus\"],\n          callback: trackShipmentCallback(resolve, reject),\n        })\n        .then(callTrackShipment)\n        .catch(handleError);\n    });\n  };\n}\n\n/**\n * @param {import('../services/shipping-service').shippingService} service\n * @type {adapterFactory}\n */\nexport function verifyDelivery(service) {\n  return async function (options) {\n    const {\n      model: order,\n      args: [callback],\n    } = options;\n\n    /**\n     *\n     * @param {function(Order)} resolve\n     * @param {function(Error)} reject\n     * @returns\n     */\n    function verifyDeliveryCallback(resolve, reject) {\n      return async function ({ message }) {\n        try {\n          const event = JSON.parse(message);\n          console.debug(\"received event...\", event);\n          const payload = service.getPayload(verifyDelivery.name, event);\n          const updated = await callback(options, payload);\n          resolve(updated);\n        } catch (e) {\n          handleError(e, reject, verifyDeliveryCallback.name);\n        }\n      };\n    }\n\n    function callVerifyDelivery() {\n      return order.notify(\n        service.topic,\n        JSON.stringify(\n          service.verifyDelivery({\n            trackingId: order.trackingId,\n            externalId: order.orderNo,\n            requester: ORDER_SERVICE,\n            respondOn: ORDER_TOPIC,\n          })\n        )\n      );\n    }\n\n    return new Promise(async function (resolve, reject) {\n      return order\n        .listen({\n          once: true,\n          model: order,\n          id: order.orderNo,\n          topic: \"orderChannel\",\n          filters: [order.orderNo, \"deliveryVerified\", \"proofOfDelivery\"],\n          callback: verifyDeliveryCallback(resolve, reject),\n        })\n        .then(callVerifyDelivery)\n        .catch(handleError);\n    });\n  };\n}\n","'use strict'\n\nimport WebSocket from 'ws'\n/** @type {WebSocket} */\nlet socket\nconst useBinary = () => socket.binaryType === 'arraybuffer'\n\n/**\n * use binary messages\n */\nconst primitives = {\n  encode: {\n    object: msg => Buffer.from(JSON.stringify(msg)),\n    string: msg => Buffer.from(JSON.stringify(msg)),\n    number: msg => Buffer.from(JSON.stringify(msg)),\n    symbol: msg => console.error('unsupported', msg),\n    undefined: msg => console.error('undefined', msg)\n  },\n  decode: {\n    object: msg => JSON.parse(Buffer.from(msg).toString()),\n    string: msg => JSON.parse(Buffer.from(msg).toString()),\n    number: msg => JSON.parse(Buffer.from(msg).toString()),\n    symbol: msg => console.error('unsupported', msg),\n    undefined: msg => console.error('undefined', msg)\n  }\n}\n\nexport function websocketConnect () {\n  return function ({ args: [url, options] }) {\n    if (socket) return socket\n    if (url) {\n      socket = new WebSocket(url, options)\n      console.debug('connected', url)\n      if (options.useBinary) socket.binaryType = 'arraybuffer'\n      return socket\n    }\n    throw new Error('missing url', url)\n  }\n}\n\nfunction encode (msg) {\n  if (useBinary()) return primitives.encode[typeof msg](msg)\n  return msg\n}\n\nfunction decode (msg) {\n  if (useBinary()) return primitives.decode[typeof msg](msg)\n  return msg\n}\n\nexport function websocketSend () {\n  return function ({ args: [msg, options = {}] }) {\n    if (\n      socket &&\n      socket.readyState === socket.OPEN &&\n      socket.bufferedAmount < 1\n    ) {\n      socket.send(\n        encode(msg),\n        useBinary() ? { ...options, binary: true } : options\n      )\n      return true\n    }\n    return false\n  }\n}\n\nexport function websocketClose () {\n  return function ({ args: [code, reason] }) {\n    if (socket) return socket.close(code, reason)\n  }\n}\n\nexport function websocketPing () {\n  return function ({ args: [options] }) {\n    if (socket) return socket.ping(options)\n  }\n}\n\nexport function websocketOnMessage () {\n  return function ({ args: [callback] }) {\n    if (socket) return socket.on('message', msg => callback(decode(msg)))\n  }\n}\n\nexport function websocketOnClose () {\n  return function ({ args: [callback] }) {\n    if (socket) socket.onclose = callback\n  }\n}\n\nexport function websocketOnOpen () {\n  return async function ({ args: [callback] }) {\n    if (socket) socket.onopen = callback\n  }\n}\n\nexport function websocketOnPong () {\n  return function ({ args: [callback] }) {\n    if (socket) socket.on('pong', callback)\n  }\n}\n\nexport function websocketStatus () {\n  return function ({ args: [callback] }) {\n    if (socket) return socket.readyState\n  }\n}\n\nexport function websocketTerminate () {\n  return function () {\n    if (socket) return socket.terminate()\n  }\n}\n","\"use strict\";\n\nimport { Kafka } from \"kafkajs\";\n\nconst brokers = process.env.KAFKA_BROKERS || \"localhost:9092\";\nconst topics = new RegExp(process.env.KAFKA_TOPICS) || /Channel/;\nconst groupId = (process.env.KAFKA_GROUP_ID || \"MicroLib\") + process.pid;\n\nconst kafka = new Kafka({\n  clientId: \"MicroLib\",\n  brokers: brokers.split(\",\"),\n});\n\nconst consumer = kafka.consumer({ groupId });\nconst producer = kafka.producer();\n\n/**\n * @typedef {EventService}\n */\nexport const Event = {\n  listening: false,\n  topics,\n\n  /**\n   * Implements event consumer service.\n   * @param {string|RegExp} topic\n   * @param {function({message, topic})} callback\n   */\n  async listen(topic, callback) {\n    try {\n      await consumer.connect();\n      await consumer.subscribe({ topic, fromBeginning: true });\n      this.listening = true;\n      await consumer.run({\n        eachMessage: async ({ topic, message }) => {\n          try {\n            callback({\n              topic,\n              message: message.value.toString(),\n            });\n          } catch (error) {\n            console.error(error);\n          }\n        },\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  },\n\n  /**\n   * Implemements event producer service.\n   * @param {string|RegExp} topic\n   * @param {string} message\n   */\n  async notify(topic, message) {\n    try {\n      await producer.connect();\n      await producer.send({\n        topic: topic,\n        messages: [{ value: message }],\n      });\n      await producer.disconnect();\n    } catch (error) {\n      console.error({ func: this.notify.name, error });\n    }\n  },\n};\n"],"sourceRoot":""}