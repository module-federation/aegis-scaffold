{"version":3,"sources":["webpack://aegis-scaffold/./src/adapters/index.js","webpack://aegis-scaffold/./src/domain/index.js","webpack://aegis-scaffold/./src/domain/ports.js","webpack://aegis-scaffold/./src/domain/validations.js","webpack://aegis-scaffold/./src/services/index.js"],"names":["validateSpec","spec","missing","filter","key","length","Error","Object","entries","makeModel","mixins","dependencies","concat","GlobalMixins","bindAdapters","ports","adapters","services","models","values","modelSpecs","map","prevmodel","Symbol","validations","mixinType","pre","post","mixinSets","premixins","postmixins","processUpdate","model","changes","JSON","parse","stringify","updates","compose","updated","updateMixins","type","o","name","cb","mixinSet","Map","has","set","eventMask","update","create","onload","handleUpdateEvent","event","isUpdate","decrypted","decrypt","isObject","p","containsUpdates","changeList","keys","every","k","util","error","console","fn","validateModel","input","v","sort","a","b","order","apply","reduce","c","output","enableEvent","onUpdate","onCreate","onLoad","enabled","enableValidation","onCreateAndUpdate","onLoadAndCreate","onLoadAndUpdate","onAll","addValidation","config","some","warn","parseKeys","propKeys","flat","RegExp","test","encryptProperties","encryptProps","obj","encrypt","freezeProperties","preventUpdates","mutations","includes","requireProperties","requireProps","hashPasswords","hashPwds","hash","internalPropList","allowProperties","rejectUnknownProps","allowList","unknownProps","rejectUnknownProperties","RegEx","email","ipv4Address","ipv6Address","phone","creditCard","ssn","expr","val","_expr","evaluateUniqueness","propVal","compareVal","unique","encrypted","listSync","propKey","Validator","tests","isValid","regex","maxnum","maxlen","validateProperties","validate","invalid","updateProperties","updaters","updateProps","u","invokePort","args","log","func","then","execMethod","functionType","string","createMethod","withValidFormat","checkFormat","value","x","encryptPersonalInfo"],"mappings":";;;;;;;;;;;;AAAA,2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAY;;AAEZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWwC;AACE;;AAE1C;AACuC;AACA;AACC;AAC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","file":"829.js","sourcesContent":["// export adapter functions\n","'use strict'\n\n/**\n * @typedef {string} eventName\n */\n\n/**\n * @typedef  Model\n * @property {string} _Symbol_id - immutable/private uuid\n * @property {string} _Symbol_modelName - immutable/private name\n * @property {string} _Symbol_createTime - immutable/private createTime\n * @property {onUpdate} _Symbol_onUpdate - immutable/private update function\n * @property {onDelete} _Symbol_onDelete\n * @property {function(Object)} update - use this function to update model\n * specify changes in an object\n * @property {function()} toJSON - de/serialization logic\n * @property {function(eventName,function(eventName,Model):void)} addListener listen for domain events\n * @property {function(eventName,Model):Promise<void>} emit emit domain event\n * @property {function(function():Promise<Model>):Promise<Model>} [port] - when a\n * port is configured, the framework generates a function to invoke it. When data\n * arrives on the port, depending on the implementation, the port's adapter invokes\n * the callback specified in the port configuration, or as an argument to the port\n * function. The callback returns an updated Model, and control is returned to the\n * caller. Optionally, an event is fired to trigger the next port function to run\n * @property {function():Promise<any>} [relation] - when you configure a relation,\n * the framework generates a function that your code can call to run the query\n * @property {function(*):*} [command] - the framework will call any model method\n * you specify when passed as a parameter or query in an API call.\n */\n\n/**\n * @callback onUpdate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onDelete\n * @param {Model} model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback validate called to handle model updates\n * @param {Model} model\n * @param {Object} changes\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @callback onLoad\n * @param {Model} savedModel rehydrated model\n * @returns {Model | Error} updated model or throw\n */\n\n/**\n * @typedef {string} service - name of the service object to inject in adapter\n * @typedef {number} timeout - call to adapter will timeout after `timeout` milliseconds\n *\n * @typedef {{\n *  [x: string]: {\n *    service: service,\n *    timeout?: timeout,\n *    callback?: function({model: Model})\n *    errorCallback?: function({model: Model, port: string, error:Error}),\n *    timeoutCallback?: function({model: Model, port: string}),\n *    consumesEvent?:string,\n *    producesEvent?:string,\n *    type?:'inbound'|'outbound',\n *    disabled?: boolean,\n *    adapter?: string,\n *    circuitBreaker?: thresholds\n *  }\n * }} ports - input/output ports for the domain\n */\n\n/**\n * @typedef {{\n *  [x:string]: {\n *    errorRate:number\n *    callVolume:number,\n *    intervalMs:number,\n *    fallbackFn:function()\n *  },\n * }} thresholds - thresholds for different errors\n */\n\n/**\n * @typedef {{\n *  [x: string]: {\n *    modelName:string,\n *    type:\"oneToMany\"|\"oneToOne\"|\"manyToOne\",\n *    foreignKey:any,\n *  }\n * }} relations - define related domain entities\n *\n * @typedef {Array<function({\n *  eventName:string,\n *  eventType:string,\n *  eventTime:string,\n *  modelName:string,\n *  model:Model\n * }):Promise<void>>} eventHandler - callbacks invoked to handle domain and\n * application events\n */\n\n/**\n *\n * @typedef {string} key\n * @typedef {*} value\n */\n\n/**\n * @typedef {{\n *  on: \"serialize\" | \"deserialize\",\n *  key: string | RegExp | \"*\" | (function(key,value):boolean)\n *  type: \"string\" | \"object\" | \"number\" | \"function\" | \"any\" | (function(key,value):boolean)\n *  value(key, value):value\n * }} serializer\n */\n/**\n * @typedef {{\n *  [x:string]: {\n *    allow:string|function(*):boolean|Array<string|function(*):boolean>\n *    deny:string|function(*):boolean|Array<string|function(*):boolean>\n *    type:\"role\"|\"relation\"|\"command\"\n *    desc?:string\n *  }\n * }} accessControlList\n */\n/**\n * @typedef {{\n *  [x: string]: {\n *    command:string|function(Model):Promise<any>,\n *    acl:accessControlList[]\n *  }\n * }} commands - configure functions to execute when specified in a\n * URL parameter or query of the auto-generate REST API\n */\n/**\n * @callback controller\n * @param {Request} req\n * @param {Response} res\n */\n\n/**\n * @typedef {{\n *  [path: string]: {\n *    get?: controller,\n *    post?: controller,\n *    patch?: controller,\n *    delete?:controller\n *   }\n * }} endpoints\n */\n\n/**\n * @callback modelSpecFactoryFn\n * @param {object} dependencies\n * @returns {function(...args):Readonly<object>}\n */\n\n/**\n * @typedef {object} ModelSpecification Specify domain model properties and functions\n * @property {string} modelName name of model (case-insenstive)\n * @property {string} endpoint URI reference (e.g. plural of `modelName` noun)\n * @property {modelSpecFactoryFn} factory returns factory function that creates the model instance\n * @property {object} [dependencies] injected into the model for inverted dependency/control\n * @property {Array<import(\"./validations\").functionalMixin>} [mixins] - use functional mixins\n * to compose the object from common domain logic, like input validation.\n * @property {onUpdate} [onUpdate] - Function called to handle update requests. Called\n * before save.\n * @property {onDelete} [onDelete] - Function called before deletion.\n * @property {validate} [validate] - called to validate model updates\n * @property {ports} [ports] - input/output ports for the domain\n * @property {eventHandler[]} [eventHandlers] - callbacks invoked to handle CRUD events\n * @property {serializer[]} [serializers] - use for custom de/serialization of the model\n * when reading or writing to storage or network\n * @property {relations} [relations] - create related models or query in aggregate\n * @property {commands} [commands] - define functions to execute when specified in a\n * URL parameter or query of the auto-generated REST API\n * @property {accessControlList} [accessControlList] - configure authorization\n * @property {endpoints} [routes] - additional custom API endpoints - specify inbound port\n * @property {{factory:import(\"../adapters/datasources/datasource-mongodb\"),url:string,credentials?:string}} [datasource] - custom datasource\n * for this model. If not set, the default set by the server is used.\n */\n\n/**\n * @callback addModel\n * @param {{ searchTerm1, searchTerm2, searchTermN }} input\n * @returns {Promise<Model>}\n */\n\n/**\n * @callback editModel\n * @param {{ id:string, changes:object }} input\n * @returns { Promise<Model> }\n */\n\n/**\n * @callback findModel\n * @param {{ id:string, query:object }} input\n * @returns { Promise<Model> }\n */\n\n/**\n * @callback findRelatedModels\n * @param {{ query:object, relation:string }} input\n * @returns { Promise<{Model,[Model]}> }\n */\n\n/**\n * @callback listModels\n * @param {{ query:object }} input e.g. { searchTerm1 : 'val', ...etc }\n * @returns { [Promise<Model>] }\n */\n\n/**\n * @callback executeCommand\n * @param {{ id:string }} input\n * @returns { Model }\n */\n\n/**\n * @typedef DomainPortAPI\n * @property { addModel } addModel\n * @property { editModel } editModel\n * @property { listModels } listModels\n * @property { findModel } findModel\n * @property { findRelatedModels } findModel\n * @property { removeModel } removeModel\n * @property { executeCommand } executeCommand\n */\n\nimport GlobalMixins from './validations'\nimport bindAdapters from './bind-adapters'\n\n// Service dependencies\nimport * as services from '../services'\nimport * as adapters from '../adapters'\nimport * as ports from '../domain/ports'\n// Models\nimport * as modelSpecs from '../config'\n\n/**\n *\n * @param {ModelSpecification} spec\n */\nfunction validateSpec (spec) {\n  const missing = ['modelName', 'endpoint', 'factory'].filter(key => !spec[key])\n  if (missing?.length > 0) {\n    throw new Error(\n      `missing properties: ${missing}, spec: ${Object.entries(spec)}`\n    )\n  }\n}\n\n/**\n * @param {ModelSpecification} spec\n * @param {*} dependencies - services injected\n */\nfunction makeModel (spec) {\n  validateSpec(spec)\n  const mixins = spec.mixins || []\n  const dependencies = spec.dependencies || {}\n  return {\n    ...spec,\n    mixins: mixins.concat(GlobalMixins),\n    dependencies: {\n      ...dependencies,\n      ...bindAdapters(spec.ports, adapters, services)\n    }\n  }\n}\n\nexport const models = Object.values(modelSpecs).map(spec => makeModel(spec))\n","// export port functions\n// See https://github.com/module-federation/aegis-scaffold for examples\n","'use strict'\n\n/**\n * Sample validation logic that is built onklkk ModelSpecification.mixins\n */\n\nimport { hash, encrypt, decrypt, compose } from '../domain/utils'\nimport util from 'util'\n\n/**\n * Functional mixin created by `functionalMixinFactory`\n * @callback functionalMixin\n * @param {Object} o Object to compose\n * @returns {Object} Composed object\n */\n\n/**\n * Functional mixin factory - partial application - returns mixin function\n * @callback functionalMixinFactory\n * @param {*} mixinParams params for mixin function\n * @returns {functionalMixin}\n */\n\n/**\n * @typedef {import(\"./index\").Model} Model\n */\n\n/**\n * Private key to access previous version of the model\n */\nexport const prevmodel = Symbol('prevModel')\n/**\n * private key to access validation config\n */\nexport const validations = Symbol('validations')\n/**\n * Process mixin pre or post update\n */\nexport const mixinType = {\n  pre: Symbol('pre'),\n  post: Symbol('post')\n}\n\n/**\n * Stored mixins - use private symbol as key to prevent overwrite\n */\nexport const mixinSets = {\n  [mixinType.pre]: Symbol('preUpdateMixins'),\n  [mixinType.post]: Symbol('postUpdateMixins')\n}\n\n/**\n * Set of pre mixins\n */\nconst premixins = mixinSets[mixinType.pre]\n/**\n * Set of post mixins\n */\nconst postmixins = mixinSets[mixinType.post]\n\n/**\n * Apply any pre and post mixins and return the result.\n * @deprecated\n * @param {*} model - current model\n * @param {*} changes - object containing changes\n * @returns {import('.').Model} updated model\n */\nexport function processUpdate (model, changes) {\n  changes[prevmodel] = JSON.parse(JSON.stringify(model)) // keep history\n\n  const updates = model[premixins]\n    ? compose(...model[premixins].values())(changes)\n    : changes\n\n  const updated = { ...model, ...updates }\n\n  return model[postmixins]\n    ? compose(...model[postmixins].values())(updated)\n    : updated\n}\n\n/**\n * @deprecated\n * Store mixins for execution on update\n * @param {mixinType} type\n * run before changes are applied or afterward\n * @param {*} o  Object containing changes to apply (pre)\n * or new object after changes have been applied (post)\n * @param {string} name `Function.name`\n * @param {functionalMixin} cb mixin function\n */\nexport function updateMixins (type, o, name, cb) {\n  if (!mixinSets[type]) {\n    throw new Error('invalid mixin type')\n  }\n\n  const mixinSet = o[mixinSets[type]] || new Map()\n\n  if (!mixinSet.has(name)) {\n    mixinSet.set(name, cb())\n\n    return {\n      ...o,\n      [mixinSets[type]]: mixinSet\n    }\n  }\n  return o\n}\n\n/**\n * bitmask for identifying events\n */\nconst eventMask = {\n  update: 1, //  0001 Update\n  create: 1 << 1, //  0010 Create\n  onload: 1 << 2 //  0100 Load\n}\n\nfunction handleUpdateEvent (model, updates, event) {\n  const isUpdate = eventMask.update & event\n  const decrypted = isUpdate ? model.decrypt() : {}\n  return {\n    ...model,\n    ...updates,\n    ...decrypted\n  }\n}\n\nfunction isObject (p) {\n  return p != null && typeof p === 'object'\n}\n\nfunction containsUpdates (model, changes, event) {\n  try {\n    if (!changes) return false\n    if (eventMask.update & event) {\n      const changeList = Object.keys(changes)\n      if (changeList.length < 1) return false\n\n      if (\n        changeList.every(\n          k => model[k] && util.isDeepStrictEqual(changes[k], model[k])\n        )\n      ) {\n        return false\n      }\n    }\n    return true\n  } catch (error) {\n    console.error({ fn: containsUpdates.name, error })\n  }\n  return false\n}\n\n/**\n * Run validation functions enabled for a given event.\n * @param {Model} model - the composed object\n * @param {*} changes - object containing changes\n * @param {Number} event - Indicates what event is occuring:\n * 1st bit turned on means update, 2nd bit create, 3rd load,\n * see {@link eventMask}.\n */\nexport function validateModel (model, changes, event) {\n  if (!model || !changes || !event) return {}\n  // if there are no changes, and the event is an update, return\n  if (!containsUpdates(model, changes, event)) {\n    return model\n  }\n\n  // keep a history of the last saved model\n  const input = {\n    ...changes,\n    [prevmodel]: JSON.parse(JSON.stringify(model || {}))\n  }\n\n  // Validate just the input data\n  const updates = model[validations]\n    .filter(v => v.input & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => model[v.name].apply(input))\n    .reduce((p, c) => ({ ...p, ...c }), input)\n\n  const updated = { ...model, ...updates }\n\n  // Validate the updated model\n  return updated[validations]\n    .filter(v => v.output & event)\n    .sort((a, b) => a.order - b.order)\n    .map(v => updated[v.name]())\n    .reduce((p, c) => ({ ...p, ...c }), updated)\n}\n\n/**\n * Enable validation to run on specific events.\n * @param {boolean} onUpdate - whether or not to run the validation on update.\n * Defaults to `true`.\n * @param {boolean} onCreate - whether or not to run the validation on create.\n * Defaults to `true`.\n * @param {boolean} onLoad - whether or not to run the validation when\n * the object is being loaded into memory after being deserialized.\n * Defaults to `false`.\n */\nfunction enableEvent ({ onUpdate = true, onCreate = true, onLoad = false }) {\n  let enabled = 0\n\n  if (onUpdate) {\n    enabled |= eventMask.update\n  }\n  if (onCreate) {\n    enabled |= eventMask.create\n  }\n  if (onLoad) {\n    enabled |= eventMask.onload\n  }\n  return enabled\n}\n\n/**\n * Specify when validations run.\n */\nconst enableValidation = (() => {\n  return {\n    /**\n     * Validation runs on update.\n     */\n    onUpdate: enableEvent({\n      onUpdate: true,\n      onCreate: false,\n      onLoad: false\n    }),\n    /**\n     * Validation runs on create.\n     */\n    onCreate: enableEvent({\n      onUpdate: false,\n      onCreate: true,\n      onLoad: false\n    }),\n    /**\n     * Validation runs on both create and update.\n     */\n    onCreateAndUpdate: enableEvent({\n      onUpdate: true,\n      onCreate: true,\n      onLoad: false\n    }),\n    /**\n     * Validation runs on load.\n     */\n    onLoad: enableEvent({\n      onUpdate: false,\n      onCreate: false,\n      onLoad: true\n    }),\n    /**\n     * Validation runs on load and create.\n     */\n    onLoadAndCreate: enableEvent({\n      onUpdate: false,\n      onCreate: true,\n      onLoad: true\n    }),\n    /**\n     * Validation runs on load and create.\n     */\n    onLoadAndUpdate: enableEvent({\n      onUpdate: true,\n      onCreate: false,\n      onLoad: true\n    }),\n    /**\n     * Validation runs on all events.\n     */\n    onAll: enableEvent({\n      onUpdate: true,\n      onCreate: true,\n      onLoad: true\n    })\n  }\n})()\n\n/**\n * Add a validation function to be called for a given event.\n * @typedef {object} validationConfig\n * @property {*} o - the composed object\n * @property {string} name - name of function to run\n * @property {number} input - \"input\" validations run against\n * the data passed by the caller in the request. Use `enableValidation`\n * to provide a value for this param.\n * @property {number} output - \"output\" functions run against the\n * model after the changes have been applied.\n * @property {number} order - order in which validation runs\n * @param {validationConfig} param0\n */\nfunction addValidation ({ model, name, input = 0, output = 0, order = 50 }) {\n  const config = model[validations] || []\n\n  if (config.some(v => v.name === name)) {\n    console.warn('duplicate validation name', name)\n    return model\n  }\n\n  return {\n    ...model,\n    validateModel,\n    [validations]: [...config, { name, input, output, order }]\n  }\n}\n\n/**\n * Resolve keys:\n * If the value includes an array, flatten it, then for each element:\n * If the value is \"*\", return all keys of the object.\n * If the value is a function, execute it to get a dynamic key or key list.\n * If the value is a RegExp, test it to get dynamic key list.\n * If any of the above produce an array of keys, flatten it.\n * @param {*} o - Object to compose\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties\n * @returns {string[]} list of (resolved) property keys\n */\nfunction parseKeys (o, ...propKeys) {\n  if (!propKeys || !o) return null\n  const keys = propKeys.flat().map(function (k) {\n    if (typeof k === 'function') return k(o)\n    if (k instanceof RegExp) return Object.keys(o).filter(key => k.test(key))\n    if (k === '*') return Object.keys(o)\n    return k\n  })\n  return keys.flat()\n}\n\n/**\n * Encrypt properties. Properties remain encrypted indefinitely, and\n * must be explicitly decrypted as needed, e.g. reading values in memory,\n * from storage, serializing and sending to an external system.\n * @param  {Array<string | function(*):string>} propKeys -\n * Names (or functions that return names) of properties to encrypt\n * @returns {functionalMixin} mixin function\n */\nexport const encryptProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  const encryptProps = obj => {\n    return keys\n      .map(key => (obj[key] ? { [key]: encrypt(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  return {\n    encryptProperties () {\n      return encryptProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: encryptProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 100\n    }),\n\n    decrypt () {\n      return keys\n        .map(key => (this[key] ? { [key]: decrypt(this[key]) } : {}))\n        .reduce((p, c) => ({ ...p, ...c }), {})\n    }\n  }\n}\n\n/**\n * Prevent properties from being modified.\n * Accepts a property name or a function that returns a property name.\n * @param  {Array<string | function(*):string | RegExp>} propKeys - names of properties to freeze\n */\nexport const freezeProperties = (...propKeys) => o => {\n  const preventUpdates = obj => {\n    const keys = parseKeys(obj, ...propKeys)\n\n    const mutations = Object.keys(obj).filter(key => keys.includes(key))\n    if (mutations?.length > 0) {\n      throw new Error(`cannot update readonly properties: ${mutations}`)\n    }\n  }\n\n  return {\n    freezeProperties () {\n      preventUpdates(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: freezeProperties.name,\n      input: enableValidation.onUpdate,\n      order: 20\n    })\n  }\n}\n\n/**\n * Enforce required fields.\n * @param {Array<string | function(*):string | RegExp>} propKeys -\n * required property key names - can be a function or regex\n * that returns the property key names\n */\nexport const requireProperties = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  function requireProps (obj) {\n    const missing = keys.filter(key => key && !obj[key])\n    if (missing?.length > 0) {\n      throw new Error(`missing required properties: ${missing}`)\n    }\n  }\n  return {\n    requireProperties () {\n      requireProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: requireProperties.name,\n      output: enableValidation.onCreateAndUpdate,\n      order: 90\n    })\n  }\n}\n\n/**\n * Hash passwords.\n * @param {*} hash hash algorithm\n * @param  {Array<string | function(*):string | RegExp>} propKeys name of password props\n */\nexport const hashPasswords = (...propKeys) => o => {\n  const keys = parseKeys(o, ...propKeys)\n\n  function hashPwds (obj) {\n    return keys\n      .map(key => (obj[key] ? { [key]: hash(obj[key]) } : {}))\n      .reduce((p, c) => ({ ...p, ...c }))\n  }\n\n  return {\n    hashPasswords () {\n      return hashPwds(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: hashPasswords.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 100\n    })\n  }\n}\n\nconst internalPropList = []\n\n/**\n * Reject unknown properties in user input. Allow only approved keys.\n * @param  {...any} propKeys\n */\nexport const allowProperties = (...propKeys) => o => {\n  function rejectUnknownProps () {\n    const keys = parseKeys(o, ...propKeys)\n    const allowList = keys.concat(internalPropList)\n\n    const unknownProps = Object.keys(o).filter(key => !allowList.includes(key))\n\n    if (unknownProps?.length > 0) {\n      throw new Error(`invalid properties: ${unknownProps}`)\n    }\n  }\n\n  return {\n    rejectUnknownProperties () {\n      return rejectUnknownProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: rejectUnknownProps.name,\n      input: enableValidation.onUpdate,\n      order: 10\n    })\n  }\n}\n\n/**\n * Test regular expressions\n */\nexport const RegEx = {\n  email: /^(.+)@(.+){2,}\\.(.+){2,}$/,\n  ipv4Address: /^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$/,\n  ipv6Address: /^((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*::((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4}))*|((?:[0-9A-Fa-f]{1,4}))((?::[0-9A-Fa-f]{1,4})){7}$/,\n  phone: /^[1-9]\\d{2}-\\d{3}-\\d{4}/,\n  creditCard: /^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n  ssn: /^(?!666|000|9\\\\d{2})\\\\d{3}-(?!00)\\\\d{2}-(?!0{4})\\\\d{4}$/,\n  /**\n   * Allow caller to pass a keyword that refers to one of the regex above\n   * @param {regexType} expr\n   * @param {*} val\n   */\n  test (expr, val) {\n    const _expr =\n      Object.keys(this).includes(expr) && this[expr] instanceof RegExp\n        ? this[expr]\n        : expr\n    return _expr.test(val)\n  }\n}\n\n/**\n * @callback isValid\n * @param {Object} o - the property owner\n * @param {*} propVal - the property value\n * @returns {boolean} - true if valid\n *\n * @typedef {'email'|'phone'|'ipv4Address'|'ipv6Address'|'creditCard'|'ssn'|RegExp} regexType\n *\n * @typedef {{\n *  propKey:string,\n *  isValid?:isValid,\n *  values?:any[],\n *  regex?:regexType,\n *  maxlen?:number\n *  maxnum?:numbertp\n *  typeof?:string\n *  unique?:{ encrypted:boolean }\n * }} validation\n */\n\nfunction evaluateUniqueness (v, o, propVal) {\n  const compareVal = v.unique.encrypted ? encrypt(propVal) : propVal\n  return o.listSync({ [v.propKey]: compareVal }).length < 1\n}\n\n/**\n * Run validation tests\n */\nconst Validator = {\n  tests: {\n    isValid: (v, o, propVal) => v.isValid(o, propVal),\n    values: (v, o, propVal) => v.values.includes(propVal),\n    regex: (v, o, propVal) => RegEx.test(v.regex, propVal),\n    typeof: (v, o, propVal) => v.typeof === typeof propVal,\n    maxnum: (v, o, propVal) => v.maxnum + 1 > propVal,\n    maxlen: (v, o, propVal) => v.maxlen + 1 > propVal.length,\n    unique: (v, o, propVal) => evaluateUniqueness(v, o, propVal)\n  },\n  /**\n   * Returns true if tests pass.\n   * @param {validation} v validation config\n   * @param {Object} o object to compose\n   * @param {*} propVal value of property to validate\n   * @returns {boolean} true if tests pass\n   */\n  isValid (v, o, propVal) {\n    return Object.keys(this.tests).every(key => {\n      if (v[key]) {\n        // the test `key` is specified, run it\n        return this.tests[key](v, o, propVal)\n      }\n      return true\n    })\n  }\n}\n\n/**\n * Verify a property value is a member of a list,\n * is unique within a set of model instances,\n * is of a certain length, size or type,\n * matches a regular expression,\n * or satisfies a custom validation function.\n * @param {validation[]} validations\n */\nexport const validateProperties = validations => o => {\n  function validate (obj) {\n    const invalid = validations.filter(v => {\n      const propVal = obj[v.propKey]\n\n      if (!propVal) {\n        return false\n      }\n      return !Validator.isValid(v, obj, propVal)\n    })\n\n    if (invalid?.length > 0) {\n      throw new Error(`invalid value for ${[...invalid.map(v => v.propKey)]}`)\n    }\n  }\n\n  return {\n    validateProperties () {\n      validate(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: validateProperties.name,\n      input: enableValidation.onUpdate,\n      output: enableValidation.onCreate,\n      order: 50\n    })\n  }\n}\n\n/**\n * @callback updaterFn\n * @param {Object} o\n * @param  {*} propVal\n * @returns {Object} object with updated properties\n *\n * @typedef {{\n * propKey: string,\n * update: updaterFn\n * }} updater\n */\n\n/**\n * Respond to property updates by updating addtional (dependent) properties as needed.\n * @param {updater[]} updaters\n */\nexport const updateProperties = updaters => o => {\n  function updateProps (obj) {\n    const updates = updaters.filter(u => obj[u.propKey])\n\n    if (updates?.length > 0) {\n      return updates\n        .map(u => u.update(o, obj[u.propKey]))\n        .reduce((p, c) => ({ ...p, ...c }))\n    }\n  }\n\n  return {\n    updateProperties () {\n      return updateProps(this)\n    },\n\n    ...addValidation({\n      model: o,\n      name: updateProperties.name,\n      output: enableValidation.onUpdate,\n      order: 30\n    })\n  }\n}\n\n/**\n * Set a validation that invokes a port. The port must be configured\n * in the `ModelSpecification`.\n * @param {string} fn - name of port (as it appears in the ModelSpec)\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments\n */\nexport const invokePort = (fn, onCreate, onUpdate, ...args) => async o => {\n  return {\n    ...o,\n    invokePort () {\n      console.log({ func: 'invokePort', fn, args })\n      return this[fn](...args).then(o => o)\n    },\n\n    ...addValidation({\n      model: o,\n      name: 'invokePort',\n      output: enableValidation.onUpdate,\n      order: 85\n    })\n  }\n}\n\n/**\n * Set a validation that calls a model method or provided function.\n * @param {string|function(Model, ...any):Promise<any>} fn - callback function\n * or name of method to executee\n * @param {boolean} onCreate - invoke on create\n * @param {boolean} onUpdate - invoke on update\n * @param  {...any} args - pass arguments to the method/function\n * @return {Model}\n */\nexport const execMethod = (fn, onCreate, onUpdate, ...args) => async o => {\n  const functionType = {\n    function: (fn, obj, ...args) => fn(obj, ...args).then(o => o),\n    string: (fn, obj, ...args) => obj[fn](...args).then(o => o)\n  }\n\n  return {\n    ...o,\n    async execMethod () {\n      const model = await functionType[typeof fn](fn, this, ...args)\n      return model\n    },\n\n    ...addValidation({\n      model: o,\n      name: 'execMethod',\n      output: enableValidation.onUpdate,\n      order: 40\n    })\n  }\n}\n\n/**\n * Create a method on a model.\n * @param {*} fn\n * @param  {...any} args\n */\nexport const createMethod = (fn, ...args) => o => {\n  return {\n    ...o,\n    [fn.name]: () => fn(...args)\n  }\n}\n\n/**\n * Check the value of the property before returning its key.\n * @param {*} propKey\n * @param {regexType} expr\n * @returns {function(any):any} dynamic property func\n */\nexport const withValidFormat = (propKey, expr) => o => {\n  if (o[propKey] && !RegEx.test(expr, o[propKey])) {\n    throw new Error(`invalid ${propKey}`)\n  }\n  return propKey\n}\n\n/**\n *\n * @param {string} value\n * @param {regexType} expr\n */\nexport const checkFormat = (value, expr) => {\n  if (value && !RegEx.test(expr, value)) {\n    const x = expr instanceof RegExp ? value : expr\n    throw new Error(`${x} invalid`)\n  }\n}\n\n/**\n * Implement GDPR encryption requirement across models\n */\nexport const encryptPersonalInfo = encryptProperties(\n  /^last.*Name$|^surname$|^family.*Name$/i,\n  /^shipping.*Address$/i,\n  /^billing.*Address$/i,\n  /^home.*Address$/i,\n  /email|e-mail/i,\n  /^phone$|^home.*phone$/i,\n  /^mobile$|^mobile.*number$|^cell.*number$/i,\n  /^credit.*Card/i,\n  /^cvv$/i,\n  /^ssn$|^socialSecurity/i,\n  /^encrypted/i\n)\n\n/**\n * Global mixins\n */\nconst GlobalMixins = [encryptPersonalInfo]\n\nexport default GlobalMixins\n","// export service classes / namespaces\n// see https://github.com/module-federation/aegis-scaffold for examples\n"],"sourceRoot":""}